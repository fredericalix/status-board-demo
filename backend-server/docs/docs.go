// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Récupérer le status de l'API",
                "produces": [
                    "text/plain"
                ],
                "summary": "Récupérer le status de l'API",
                "responses": {
                    "200": {
                        "description": "hello from clever cloud",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "Listens for real-time notifications using SSE",
                "produces": [
                    "text/event-stream"
                ],
                "summary": "Server-Sent Events (SSE) notifications",
                "responses": {
                    "200": {
                        "description": "SSE connection established",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Récupère la liste de tous les status",
                "produces": [
                    "application/json"
                ],
                "summary": "Récupérer tous les status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Status"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Ajoute un nouveau status à la base de données",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Créer un nouveau status",
                "parameters": [
                    {
                        "description": "Status à ajouter",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Status"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Status"
                        }
                    }
                }
            }
        },
        "/status/{id}": {
            "get": {
                "description": "Récupère un status spécifique par son ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Récupérer un status par son ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du status à récupérer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Status"
                        }
                    }
                }
            },
            "put": {
                "description": "Met à jour un status existant dans la base de données",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Modifier un status existant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du status à modifier",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Nouvelles données du status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Status"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Status"
                        }
                    }
                }
            },
            "delete": {
                "description": "Supprime un status de la base de données",
                "produces": [
                    "application/json"
                ],
                "summary": "Supprimer un status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du status à supprimer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Status": {
            "type": "object",
            "properties": {
                "designation": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
